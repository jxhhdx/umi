{"version":3,"names":["assert","compose","isPromiseLike","ApplyPluginsType","PluginManager","opts","_classCallCheck","_defineProperty","_createClass","key","value","register","plugin","_this","apply","Object","keys","forEach","validKeys","indexOf","concat","path","hooks","getHooks","keyWithDot","_keyWithDot$split","split","_keyWithDot$split2","_toArray","memberKeys","slice","length","map","hook","ret","_iterator","_createForOfIteratorHelper","_step","s","n","done","memberKey","err","e","f","filter","Boolean","applyPlugins","_ref","type","initialValue","args","async","_typeof","modify","event","reduce","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","memo","wrap","_callee$","_context","prev","next","sent","abrupt","_objectSpread","stop","_x","_x2","arguments","Promise","resolve","_callee2","_iterator2","_step2","_callee2$","_context2","t0","finish","fns","create","pluginManager","plugins"],"sources":["../../src/client/plugin.ts"],"sourcesContent":["import { assert, compose, isPromiseLike } from './utils';\n\nexport enum ApplyPluginsType {\n  compose = 'compose',\n  modify = 'modify',\n  event = 'event',\n}\n\ninterface IPlugin {\n  path?: string;\n  apply: Record<string, any>;\n}\n\nexport class PluginManager {\n  opts: { validKeys: string[] };\n  hooks: {\n    [key: string]: any;\n  } = {};\n  constructor(opts: { validKeys: string[] }) {\n    this.opts = opts;\n  }\n\n  register(plugin: IPlugin) {\n    assert(plugin.apply, `plugin register failed, apply must supplied`);\n    Object.keys(plugin.apply).forEach((key) => {\n      assert(\n        this.opts.validKeys.indexOf(key) > -1,\n        `register failed, invalid key ${key} ${\n          plugin.path ? `from plugin ${plugin.path}` : ''\n        }.`,\n      );\n      this.hooks[key] = (this.hooks[key] || []).concat(plugin.apply[key]);\n    });\n  }\n\n  getHooks(keyWithDot: string) {\n    const [key, ...memberKeys] = keyWithDot.split('.');\n    let hooks = this.hooks[key] || [];\n    if (memberKeys.length) {\n      hooks = hooks\n        .map((hook: any) => {\n          try {\n            let ret = hook;\n            for (const memberKey of memberKeys) {\n              ret = ret[memberKey];\n            }\n            return ret;\n          } catch (e) {\n            return null;\n          }\n        })\n        .filter(Boolean);\n    }\n    return hooks;\n  }\n\n  applyPlugins({\n    key,\n    type,\n    initialValue,\n    args,\n    async,\n  }: {\n    key: string;\n    type: ApplyPluginsType;\n    initialValue?: any;\n    args?: object;\n    async?: boolean;\n  }) {\n    const hooks = this.getHooks(key) || [];\n\n    if (args) {\n      assert(\n        typeof args === 'object',\n        `applyPlugins failed, args must be plain object.`,\n      );\n    }\n    if (async) {\n      assert(\n        type === ApplyPluginsType.modify || type === ApplyPluginsType.event,\n        `async only works with modify and event type.`,\n      );\n    }\n\n    switch (type) {\n      case ApplyPluginsType.modify:\n        if (async) {\n          return hooks.reduce(\n            async (memo: any, hook: Function | Promise<any> | object) => {\n              assert(\n                typeof hook === 'function' ||\n                  typeof hook === 'object' ||\n                  isPromiseLike(hook),\n                `applyPlugins failed, all hooks for key ${key} must be function, plain object or Promise.`,\n              );\n              if (isPromiseLike(memo)) {\n                memo = await memo;\n              }\n              if (typeof hook === 'function') {\n                const ret = hook(memo, args);\n                if (isPromiseLike(ret)) {\n                  return await ret;\n                } else {\n                  return ret;\n                }\n              } else {\n                if (isPromiseLike(hook)) {\n                  hook = await hook;\n                }\n                return { ...memo, ...hook };\n              }\n            },\n            isPromiseLike(initialValue)\n              ? initialValue\n              : Promise.resolve(initialValue),\n          );\n        } else {\n          return hooks.reduce((memo: any, hook: Function | object) => {\n            assert(\n              typeof hook === 'function' || typeof hook === 'object',\n              `applyPlugins failed, all hooks for key ${key} must be function or plain object.`,\n            );\n            if (typeof hook === 'function') {\n              return hook(memo, args);\n            } else {\n              // TODO: deepmerge?\n              return { ...memo, ...hook };\n            }\n          }, initialValue);\n        }\n\n      case ApplyPluginsType.event:\n        return (async () => {\n          for (const hook of hooks) {\n            assert(\n              typeof hook === 'function',\n              `applyPlugins failed, all hooks for key ${key} must be function.`,\n            );\n            const ret = hook(args);\n            if (async && isPromiseLike(ret)) {\n              await ret;\n            }\n          }\n        })();\n\n      case ApplyPluginsType.compose:\n        return () => {\n          return compose({\n            fns: hooks.concat(initialValue),\n            args,\n          })();\n        };\n    }\n  }\n\n  static create(opts: { validKeys: string[]; plugins: IPlugin[] }) {\n    const pluginManager = new PluginManager({\n      validKeys: opts.validKeys,\n    });\n    opts.plugins.forEach((plugin) => {\n      pluginManager.register(plugin);\n    });\n    return pluginManager;\n  }\n}\n\n// plugins meta info (in tmp file)\n// hooks api: usePlugin\n"],"mappings":"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"}