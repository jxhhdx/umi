{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","stripAnsi","ErrorOverlay","MESSAGE_TYPE","formatWebpackMessages","console","log","getHost","process","env","SOCKET_SERVER","URL","location","getSocketUrl","h","host","isHttps","protocol","concat","getPingUrl","pingTimer","isFirstCompilation","mostRecentCompilationHash","hasCompileErrors","hadRuntimeError","pingUrl","socket","WebSocket","addEventListener","_ref2","_callee","_ref","data","_callee$","_context","JSON","parse","window","setInterval","send","handleMessage","_x","waitForSuccessfulPing","_waitForSuccessfulPing","_callee3","ms","_args3","_callee3$","_context3","fetch","t0","setTimeout","_callee2","_callee2$","_context2","clearInterval","reload","enableErrorOverlay","ERROR_OVERLAY","startReportingRuntimeErrors","onError","filename","module","hot","dispose","stopReportingRuntimeErrors","handleAvailableHash","hash","handleSuccess","isHotUpdate","tryApplyUpdates","onHotUpdateSuccess","tryDismissErrorOverlay","handleWarnings","warnings","formatted","errors","warn","onSuccessfulHotUpdate","handleErrors","reportBuildError","dismissBuildError","isUpdateAvailable","__webpack_hash__","canApplyUpdates","status","canAcceptErrors","hasReactRefresh","FAST_REFRESH","indexOf","handleApplyUpdates","updatedModules","haveErrors","needsForcedReload","check","_x2","_handleMessage","_callee4","payload","_callee4$","_context4","stillOk","ok"],"sources":["../../src/client/client.ts"],"sourcesContent":["import stripAnsi from '@umijs/utils/compiled/strip-ansi';\n// @ts-ignore\nimport * as ErrorOverlay from 'react-error-overlay';\nimport { MESSAGE_TYPE } from '../constants';\nimport { formatWebpackMessages } from '../utils/formatWebpackMessages';\n\nconsole.log('[webpack] connecting...');\n\nfunction getHost(): { protocol: string; host: string; port: string } {\n  if (process.env.SOCKET_SERVER) {\n    return new URL(process.env.SOCKET_SERVER);\n  }\n  return location;\n}\n\nfunction getSocketUrl() {\n  let h = getHost();\n  const host = h.host;\n  const isHttps = h.protocol === 'https:';\n  return `${isHttps ? 'wss' : 'ws'}://${host}`;\n}\n\nfunction getPingUrl() {\n  const h = getHost();\n  return `${h.protocol}//${h.host}/__umi_ping`;\n}\n\nlet pingTimer: number | null = null;\n\nlet isFirstCompilation = true;\nlet mostRecentCompilationHash: string | null = null;\nlet hasCompileErrors = false;\nlet hadRuntimeError = false;\nconst pingUrl = getPingUrl();\n\nconst socket = new WebSocket(getSocketUrl(), 'webpack-hmr');\n\nsocket.addEventListener('message', async ({ data }) => {\n  data = JSON.parse(data);\n  if (data.type === 'connected') {\n    console.log(`[webpack] connected.`);\n    // proxy(nginx, docker) hmr ws maybe caused timeout,\n    // so send ping package let ws keep alive.\n    pingTimer = window.setInterval(() => socket.send('ping'), 30000);\n  } else {\n    handleMessage(data).catch(console.error);\n  }\n});\n\nasync function waitForSuccessfulPing(ms = 1000) {\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    try {\n      await fetch(pingUrl);\n      break;\n    } catch (e) {\n      await new Promise((resolve) => setTimeout(resolve, ms));\n    }\n  }\n}\n\nsocket.addEventListener('close', async () => {\n  if (pingTimer) clearInterval(pingTimer);\n  console.info('[webpack] Dev server disconnected. Polling for restart...');\n  await waitForSuccessfulPing();\n  location.reload();\n});\n\nconst enableErrorOverlay = process.env.ERROR_OVERLAY !== 'none';\nenableErrorOverlay &&\n  ErrorOverlay.startReportingRuntimeErrors({\n    onError: function () {\n      hadRuntimeError = true;\n    },\n    filename: '/static/js/bundle.js',\n  });\n\n// @ts-ignore\nif (module.hot && typeof module.hot.dispose === 'function') {\n  // @ts-ignore\n  module.hot.dispose(function () {\n    // TODO: why do we need this?\n    enableErrorOverlay && ErrorOverlay.stopReportingRuntimeErrors();\n  });\n}\n\n// There is a newer version of the code available.\nfunction handleAvailableHash(hash: string) {\n  // Update last known compilation hash.\n  mostRecentCompilationHash = hash;\n}\n\nfunction handleSuccess() {\n  const isHotUpdate = !isFirstCompilation;\n  isFirstCompilation = false;\n  hasCompileErrors = false;\n\n  // Attempt to apply hot updates or reload.\n  if (isHotUpdate) {\n    tryApplyUpdates(function onHotUpdateSuccess() {\n      // Only dismiss it when we're sure it's a hot update.\n      // Otherwise, it would flicker right before the reload.\n      tryDismissErrorOverlay();\n    });\n  }\n}\n\nfunction handleWarnings(warnings: string[]) {\n  const isHotUpdate = !isFirstCompilation;\n  isFirstCompilation = false;\n  hasCompileErrors = false;\n\n  const formatted = formatWebpackMessages({\n    warnings,\n    errors: [],\n  });\n\n  // print warnings\n  if (typeof console !== 'undefined' && typeof console.warn === 'function') {\n    for (let i = 0; i < formatted.warnings.length; i++) {\n      if (i === 5) {\n        console.warn(\n          'There were more warnings in other files.\\n' +\n            'You can find a complete log in the terminal.',\n        );\n        break;\n      }\n      console.warn(stripAnsi(formatted.warnings[i]));\n    }\n  }\n\n  // Attempt to apply hot updates or reload.\n  if (isHotUpdate) {\n    tryApplyUpdates(function onSuccessfulHotUpdate() {\n      // Only dismiss it when we're sure it's a hot update.\n      // Otherwise, it would flicker right before the reload.\n      tryDismissErrorOverlay();\n    });\n  }\n}\n\nfunction handleErrors(errors: string[]) {\n  isFirstCompilation = false;\n  hasCompileErrors = true;\n\n  const formatted = formatWebpackMessages({\n    warnings: [],\n    errors,\n  });\n\n  // Only show the first error.\n  enableErrorOverlay && ErrorOverlay.reportBuildError(formatted.errors[0]);\n\n  // Also log them to the console.\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    for (let i = 0; i < formatted.errors.length; i++) {\n      console.error(stripAnsi(formatted.errors[i]));\n    }\n  }\n}\n\nfunction tryDismissErrorOverlay() {\n  if (!hasCompileErrors) {\n    enableErrorOverlay && ErrorOverlay.dismissBuildError();\n  }\n}\n\n// Is there a newer version of this code available?\nfunction isUpdateAvailable() {\n  // @ts-ignore\n  return mostRecentCompilationHash !== __webpack_hash__;\n}\n\nfunction canApplyUpdates() {\n  // @ts-ignore\n  return module.hot.status() === 'idle';\n}\n\nfunction canAcceptErrors() {\n  // NOTE: This var is injected by Webpack's DefinePlugin, and is a boolean instead of string.\n  const hasReactRefresh = process.env.FAST_REFRESH;\n\n  // @ts-ignore\n  const status = module.hot.status();\n  // React refresh can handle hot-reloading over errors.\n  // However, when hot-reload status is abort or fail,\n  // it indicates the current update cannot be applied safely,\n  // and thus we should bail out to a forced reload for consistency.\n  return hasReactRefresh && ['abort', 'fail'].indexOf(status) === -1;\n}\n\nfunction tryApplyUpdates(onHotUpdateSuccess?: Function) {\n  // @ts-ignore\n  if (!module.hot) {\n    window.location.reload();\n    return;\n  }\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    return;\n  }\n\n  function handleApplyUpdates(err: Error | null, updatedModules: any) {\n    const haveErrors = err || hadRuntimeError;\n    // When there is no error but updatedModules is unavailable,\n    // it indicates a critical failure in hot-reloading,\n    // e.g. server is not ready to serve new bundle,\n    // and hence we need to do a forced reload.\n    const needsForcedReload = !err && !updatedModules;\n    if ((haveErrors && !canAcceptErrors()) || needsForcedReload) {\n      window.location.reload();\n    }\n    if (onHotUpdateSuccess) onHotUpdateSuccess();\n    // While we were updating, there was a new update! Do it again.\n    if (isUpdateAvailable()) {\n      tryApplyUpdates();\n    }\n  }\n\n  // @ts-ignore\n  module.hot\n    .check(/* autoApply */ true)\n    .then((updatedModules: any) => {\n      handleApplyUpdates(null, updatedModules);\n    })\n    .catch((err: Error) => {\n      handleApplyUpdates(err, null);\n    });\n}\n\nasync function handleMessage(payload: any) {\n  // console.log('[payload]', payload);\n  switch (payload.type) {\n    case MESSAGE_TYPE.hash:\n      handleAvailableHash(payload.data);\n      break;\n    case MESSAGE_TYPE.stillOk:\n    case MESSAGE_TYPE.ok:\n      handleSuccess();\n      break;\n    case MESSAGE_TYPE.errors:\n      handleErrors(payload.data);\n      break;\n    case MESSAGE_TYPE.warnings:\n      handleWarnings(payload.data);\n      break;\n    default:\n    // Do nothing\n  }\n}\n"],"mappings":"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"}